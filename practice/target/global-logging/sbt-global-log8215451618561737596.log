[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.2 (Oracle Corporation Java 1.8.0_281)
[debug]       Load.loadUnit: plugins took 100.1218ms
[debug]       Load.loadUnit: defsScala took 0.4537ms
[debug] [Loading] Scanning directory C:\Users\user\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 19.519 ms
[debug]           Load.resolveProject(global-plugins) took 57.0716ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\user\.sbt\1.0\plugins, plugins: List(<none>))) took 109.3798ms
[debug] [Loading] Done in C:\Users\user\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 133.553ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3061ms
[debug]     Load.loadUnit(file:/C:/Users/user/.sbt/1.0/plugins/, ...) took 243.6224ms
[debug]   Load.apply: load took 405.8442ms
[debug]   Load.apply: resolveProjects took 7.3117ms
[debug]   Load.apply: finalTransforms took 64.5552ms
[debug]   Load.apply: config.delegates took 10.547ms
[debug]   Load.apply: Def.make(settings)... took 466.4172ms
[debug]   Load.apply: structureIndex took 130.4431ms
[debug]   Load.apply: mkStreams took 2.0944ms
[info] loading global plugins from C:\Users\user\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3323.8699ms
[debug]           Load.loadUnit: plugins took 21.3178ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.3011 ms
[debug]               Load.resolveProject(practice-build) took 1.0632ms
[debug]             Load.loadTransitive: finalizeProject(Project(id practice-build, base: E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\project, plugins: List(<none>))) took 3.9344ms
[debug] [Loading] Done in E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\project, returning: (practice-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 5.7994ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.012ms
[debug]         Load.loadUnit(file:/E:/Disk%20G/KBTU/3%20course/2%20term/Backend%20Scala/Practice/practice/project/, ...) took 28.0518ms
[debug]       Load.apply: load took 29.5814ms
[debug]       Load.apply: resolveProjects took 0.1035ms
[debug]       Load.apply: finalTransforms took 9.9438ms
[debug]       Load.apply: config.delegates took 0.4346ms
[debug]       Load.apply: Def.make(settings)... took 91.651ms
[debug]       Load.apply: structureIndex took 34.8335ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 339.9637ms
[debug]     Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice
[debug]       Load.loadUnit: mkEval took 8.484ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.0337 ms
[info] loading settings for project practice from build.sbt ...
[debug]         Load.resolveProject(practice) took 3.1209ms
[debug]       Load.loadTransitive: finalizeProject(Project(id practice, base: E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice, plugins: List(<none>))) took 6.0301ms
[debug] [Loading] Done in E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice, returning: (practice)
[debug]     Load.loadUnit: loadedProjectsRaw took 109.6862ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.5964ms
[debug]   Load.loadUnit(file:/E:/Disk%20G/KBTU/3%20course/2%20term/Backend%20Scala/Practice/practice/, ...) took 454.9997ms
[debug] Load.apply: load took 456.5976ms
[debug] Load.apply: resolveProjects took 0.2253ms
[debug] Load.apply: finalTransforms took 8.8982ms
[debug] Load.apply: config.delegates took 0.3297ms
[debug] Load.apply: Def.make(settings)... took 71.8013ms
[debug] Load.apply: structureIndex took 28.239ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to practice (in build file:/E:/Disk%20G/KBTU/3%20course/2%20term/Backend%20Scala/Practice/practice/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to E:\Disk G\KBTU\3 course\2 term\Backend Scala\Practice\practice\target\scala-2.13\classes ...
[info] done compiling
